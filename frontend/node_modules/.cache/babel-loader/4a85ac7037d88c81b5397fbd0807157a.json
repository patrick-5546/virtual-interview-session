{"ast":null,"code":"\"use strict\";\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar host_1 = require(\"./host\");\n/**\n * Provides methods to define the properties of a [[ChattyHost]]\n */\n\n\nvar ChattyHostBuilder =\n/** @class */\nfunction () {\n  /** @hidden */\n  function ChattyHostBuilder(_url, _source) {\n    this._url = _url;\n    this._source = _source;\n    this._appendTo = null;\n    this._handlers = {};\n    this._sandboxAttrs = [];\n    this._allowAttrs = [];\n    this._frameBorder = '0';\n    this._targetOrigin = null;\n    this._defaultTimeout = 30000;\n  }\n\n  Object.defineProperty(ChattyHostBuilder.prototype, \"el\", {\n    get: function () {\n      return this._appendTo || document.body;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyHostBuilder.prototype, \"handlers\", {\n    get: function () {\n      return this._handlers;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyHostBuilder.prototype, \"sandboxAttrs\", {\n    get: function () {\n      return this._sandboxAttrs;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyHostBuilder.prototype, \"allowAttrs\", {\n    get: function () {\n      return this._allowAttrs;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyHostBuilder.prototype, \"targetOrigin\", {\n    get: function () {\n      return this._targetOrigin;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyHostBuilder.prototype, \"url\", {\n    get: function () {\n      return this._url;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyHostBuilder.prototype, \"source\", {\n    get: function () {\n      return this._source;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyHostBuilder.prototype, \"defaultTimeout\", {\n    get: function () {\n      return this._defaultTimeout;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @param el the HTML element that the iframe will live inside. The iframe will be created as\n   * a direct child of the element.\n   * @returns the host builder\n   */\n\n  ChattyHostBuilder.prototype.appendTo = function (el) {\n    this._appendTo = el;\n    return this;\n  };\n  /**\n   * Removes an event handler to the host.\n   *\n   * @param name Event name\n   * @param fn Callback function to remove.\n   * @returns the host builder\n   */\n\n\n  ChattyHostBuilder.prototype.off = function (name, fn) {\n    if (this._handlers[name]) {\n      this._handlers[name] = this._handlers[name].filter(function (handler) {\n        return handler !== fn;\n      });\n    }\n  };\n  /**\n   * Adds an event handler to the host.\n   *\n   * @param name Event name to which to listen.\n   * @param fn Callback function that is invoked when the event\n   * is received, and accepts any parameters that were passed with the event. If the event\n   * received is sent using [[ChattyClientConnection.sendAndReceive]], its return value is included\n   * in the array that will be passed to the resolved promise.\n   * @returns the host builder\n   */\n\n\n  ChattyHostBuilder.prototype.on = function (name, fn) {\n    this._handlers[name] = this._handlers[name] || [];\n\n    this._handlers[name].push(fn);\n\n    return this;\n  };\n  /**\n   * Sets the default period of time a [[ChattyHostConnection.sendAndReceive]] message will wait.\n   * Use a negative number to wait indefinitely.\n   *\n   * @param timeout in milliseconds\n   * @returns the host builder\n   */\n\n\n  ChattyHostBuilder.prototype.withDefaultTimeout = function (timeout) {\n    this._defaultTimeout = timeout;\n    return this;\n  };\n  /** @deprecated The frame-board attribute is deprecated, use CSS instead */\n\n\n  ChattyHostBuilder.prototype.getFrameBorder = function () {\n    return this._frameBorder;\n  };\n  /** @deprecated The frame-board attribute is deprecated, use CSS instead */\n\n\n  ChattyHostBuilder.prototype.frameBorder = function (attr) {\n    this._frameBorder = attr;\n    return this;\n  };\n  /** @deprecated Replaced by [[withSandboxAttribute]] */\n\n\n  ChattyHostBuilder.prototype.sandbox = function (attr) {\n    this.withSandboxAttribute(attr);\n    return this;\n  };\n  /**\n   * Create the iframe with the given sandbox attribute\n   *\n   * @param attr The sandbox attribute\n   */\n\n\n  ChattyHostBuilder.prototype.withSandboxAttribute = function (attr) {\n    this._sandboxAttrs.push(attr);\n\n    return this;\n  };\n  /**\n   * Create the iframe with the given allow attribute\n   *\n   * @param attr The sandbox attribute\n   */\n\n\n  ChattyHostBuilder.prototype.withAllowAttribute = function (attr) {\n    this._allowAttrs.push(attr);\n\n    return this;\n  };\n  /**\n   * Use `targetOrigin` as the value for postMessage(). See\n   * [Window.postMessage()](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)\n   * for details.\n   *\n   * @param targetOrigin\n   */\n\n\n  ChattyHostBuilder.prototype.withTargetOrigin = function (targetOrigin) {\n    this._targetOrigin = targetOrigin;\n    return this;\n  };\n  /**\n   * Builds a [[ChattyHost]] with the provided properties.\n   */\n\n\n  ChattyHostBuilder.prototype.build = function () {\n    return new host_1.ChattyHost(this);\n  };\n\n  return ChattyHostBuilder;\n}();\n\nexports.ChattyHostBuilder = ChattyHostBuilder;","map":{"version":3,"sources":["C:/Users/user/React/react-login/node_modules/@looker/chatty/lib/host_builder.js"],"names":["Object","defineProperty","exports","value","host_1","require","ChattyHostBuilder","_url","_source","_appendTo","_handlers","_sandboxAttrs","_allowAttrs","_frameBorder","_targetOrigin","_defaultTimeout","prototype","get","document","body","enumerable","configurable","appendTo","el","off","name","fn","filter","handler","on","push","withDefaultTimeout","timeout","getFrameBorder","frameBorder","attr","sandbox","withSandboxAttribute","withAllowAttribute","withTargetOrigin","targetOrigin","build","ChattyHost"],"mappings":"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","sourcesContent":["\"use strict\";\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar host_1 = require(\"./host\");\n/**\n * Provides methods to define the properties of a [[ChattyHost]]\n */\nvar ChattyHostBuilder = /** @class */ (function () {\n    /** @hidden */\n    function ChattyHostBuilder(_url, _source) {\n        this._url = _url;\n        this._source = _source;\n        this._appendTo = null;\n        this._handlers = {};\n        this._sandboxAttrs = [];\n        this._allowAttrs = [];\n        this._frameBorder = '0';\n        this._targetOrigin = null;\n        this._defaultTimeout = 30000;\n    }\n    Object.defineProperty(ChattyHostBuilder.prototype, \"el\", {\n        get: function () {\n            return this._appendTo || document.body;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyHostBuilder.prototype, \"handlers\", {\n        get: function () {\n            return this._handlers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyHostBuilder.prototype, \"sandboxAttrs\", {\n        get: function () {\n            return this._sandboxAttrs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyHostBuilder.prototype, \"allowAttrs\", {\n        get: function () {\n            return this._allowAttrs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyHostBuilder.prototype, \"targetOrigin\", {\n        get: function () {\n            return this._targetOrigin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyHostBuilder.prototype, \"url\", {\n        get: function () {\n            return this._url;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyHostBuilder.prototype, \"source\", {\n        get: function () {\n            return this._source;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyHostBuilder.prototype, \"defaultTimeout\", {\n        get: function () {\n            return this._defaultTimeout;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param el the HTML element that the iframe will live inside. The iframe will be created as\n     * a direct child of the element.\n     * @returns the host builder\n     */\n    ChattyHostBuilder.prototype.appendTo = function (el) {\n        this._appendTo = el;\n        return this;\n    };\n    /**\n     * Removes an event handler to the host.\n     *\n     * @param name Event name\n     * @param fn Callback function to remove.\n     * @returns the host builder\n     */\n    ChattyHostBuilder.prototype.off = function (name, fn) {\n        if (this._handlers[name]) {\n            this._handlers[name] = this._handlers[name].filter(function (handler) { return handler !== fn; });\n        }\n    };\n    /**\n     * Adds an event handler to the host.\n     *\n     * @param name Event name to which to listen.\n     * @param fn Callback function that is invoked when the event\n     * is received, and accepts any parameters that were passed with the event. If the event\n     * received is sent using [[ChattyClientConnection.sendAndReceive]], its return value is included\n     * in the array that will be passed to the resolved promise.\n     * @returns the host builder\n     */\n    ChattyHostBuilder.prototype.on = function (name, fn) {\n        this._handlers[name] = this._handlers[name] || [];\n        this._handlers[name].push(fn);\n        return this;\n    };\n    /**\n     * Sets the default period of time a [[ChattyHostConnection.sendAndReceive]] message will wait.\n     * Use a negative number to wait indefinitely.\n     *\n     * @param timeout in milliseconds\n     * @returns the host builder\n     */\n    ChattyHostBuilder.prototype.withDefaultTimeout = function (timeout) {\n        this._defaultTimeout = timeout;\n        return this;\n    };\n    /** @deprecated The frame-board attribute is deprecated, use CSS instead */\n    ChattyHostBuilder.prototype.getFrameBorder = function () {\n        return this._frameBorder;\n    };\n    /** @deprecated The frame-board attribute is deprecated, use CSS instead */\n    ChattyHostBuilder.prototype.frameBorder = function (attr) {\n        this._frameBorder = attr;\n        return this;\n    };\n    /** @deprecated Replaced by [[withSandboxAttribute]] */\n    ChattyHostBuilder.prototype.sandbox = function (attr) {\n        this.withSandboxAttribute(attr);\n        return this;\n    };\n    /**\n     * Create the iframe with the given sandbox attribute\n     *\n     * @param attr The sandbox attribute\n     */\n    ChattyHostBuilder.prototype.withSandboxAttribute = function (attr) {\n        this._sandboxAttrs.push(attr);\n        return this;\n    };\n    /**\n     * Create the iframe with the given allow attribute\n     *\n     * @param attr The sandbox attribute\n     */\n    ChattyHostBuilder.prototype.withAllowAttribute = function (attr) {\n        this._allowAttrs.push(attr);\n        return this;\n    };\n    /**\n     * Use `targetOrigin` as the value for postMessage(). See\n     * [Window.postMessage()](https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage)\n     * for details.\n     *\n     * @param targetOrigin\n     */\n    ChattyHostBuilder.prototype.withTargetOrigin = function (targetOrigin) {\n        this._targetOrigin = targetOrigin;\n        return this;\n    };\n    /**\n     * Builds a [[ChattyHost]] with the provided properties.\n     */\n    ChattyHostBuilder.prototype.build = function () {\n        return new host_1.ChattyHost(this);\n    };\n    return ChattyHostBuilder;\n}());\nexports.ChattyHostBuilder = ChattyHostBuilder;\n"]},"metadata":{},"sourceType":"script"}