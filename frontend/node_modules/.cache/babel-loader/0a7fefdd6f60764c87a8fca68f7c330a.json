{"ast":null,"code":"\"use strict\";\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar client_messages_1 = require(\"./client_messages\");\n\nvar host_messages_1 = require(\"./host_messages\");\n\nrequire(\"es6-promise/auto\"); // Polyfill only browsers without Promises\n\n\nvar debugLib = require(\"debug\");\n/**\n * @private\n * Host connection status\n */\n\n\nvar ChattyHostStates;\n\n(function (ChattyHostStates) {\n  ChattyHostStates[ChattyHostStates[\"Connecting\"] = 0] = \"Connecting\";\n  ChattyHostStates[ChattyHostStates[\"SynAck\"] = 1] = \"SynAck\";\n  ChattyHostStates[ChattyHostStates[\"Connected\"] = 2] = \"Connected\";\n})(ChattyHostStates = exports.ChattyHostStates || (exports.ChattyHostStates = {}));\n/**\n * The host object for an iframe. The user should not create this object directly, it\n * is returned by the [[ChattyHostBuilder.build]] method.\n */\n\n\nvar ChattyHost =\n/** @class */\nfunction () {\n  /**\n   * @param builder The client builder that is responsible for constructing this object.\n   * @hidden\n   */\n  function ChattyHost(builder) {\n    var _this = this;\n\n    this._hostWindow = window;\n    this._connection = null;\n    this._state = ChattyHostStates.Connecting;\n    this._sequence = 0;\n    this._receivers = {};\n    this.iframe = document.createElement('iframe');\n    builder.sandboxAttrs.forEach(function (attr) {\n      return _this.iframe.sandbox.add(attr);\n    });\n\n    if ('allow' in this.iframe) {\n      this.iframe.allow = builder.allowAttrs.join('; ');\n    } // tslint:disable-next-line:deprecation\n\n\n    this.iframe.frameBorder = builder.getFrameBorder();\n\n    if (builder.url) {\n      this.iframe.src = builder.url;\n    } else if (builder.source) {\n      this.iframe.srcdoc = builder.source;\n    } else {\n      console.warn('url or source required to initialize Chatty host correctly');\n    }\n\n    this._appendTo = builder.el;\n    this._handlers = builder.handlers;\n    this._port = null;\n    this._targetOrigin = builder.targetOrigin;\n    this._defaultTimeout = builder.defaultTimeout;\n  }\n\n  Object.defineProperty(ChattyHost.prototype, \"connection\", {\n    /**\n     * @returns a Promise to an object that resolves when the client initiates the connection.\n     */\n    get: function () {\n      return this._connection;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyHost.prototype, \"isConnected\", {\n    /**\n     * @returns a flag indicating whether the client successfully connected to the host.\n     */\n    get: function () {\n      return this._state === ChattyHostStates.Connected;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Connects to the client iframe. Waits for the client iframe to load and initiate a\n   * connection using the chatty client.\n   *\n   * @returns a Promise to an object that resolves when the client has initiated the connection. The\n   * object implements the [[ChattyHostConnection]] that can be used to talk to the host.\n   */\n\n  ChattyHost.prototype.connect = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var createConnection;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (this._connection) return [2\n        /*return*/\n        , this._connection];\n\n        createConnection = function () {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _this = this;\n\n            return __generator(this, function (_a) {\n              return [2\n              /*return*/\n              , new Promise(function (resolve, reject) {\n                var eventListener = function (evt) {\n                  ChattyHost._debug('port received', evt.data.action, evt.data.data);\n\n                  switch (evt.data.action) {\n                    case client_messages_1.ChattyClientMessages.Ack:\n                      _this._state = ChattyHostStates.Connected;\n                      resolve({\n                        send: function (eventName) {\n                          var payload = [];\n\n                          for (var _i = 1; _i < arguments.length; _i++) {\n                            payload[_i - 1] = arguments[_i];\n                          }\n\n                          _this.sendMsg(host_messages_1.ChattyHostMessages.Message, {\n                            eventName: eventName,\n                            payload: payload\n                          });\n                        },\n                        sendAndReceive: function (eventName) {\n                          var payload = [];\n\n                          for (var _i = 1; _i < arguments.length; _i++) {\n                            payload[_i - 1] = arguments[_i];\n                          }\n\n                          return __awaiter(_this, void 0, void 0, function () {\n                            var sequence;\n\n                            var _this = this;\n\n                            return __generator(this, function (_a) {\n                              sequence = ++this._sequence;\n                              this.sendMsg(host_messages_1.ChattyHostMessages.MessageWithResponse, {\n                                eventName: eventName,\n                                payload: payload\n                              }, sequence);\n                              return [2\n                              /*return*/\n                              , new Promise(function (resolve, reject) {\n                                var timeoutId;\n\n                                if (_this._defaultTimeout > -1) {\n                                  timeoutId = setTimeout(function () {\n                                    delete _this._receivers[sequence];\n                                    reject(new Error('Timeout'));\n                                  }, _this._defaultTimeout);\n                                }\n\n                                _this._receivers[sequence] = {\n                                  resolve: resolve,\n                                  reject: reject,\n                                  timeoutId: timeoutId\n                                };\n                              })];\n                            });\n                          });\n                        }\n                      });\n                      break;\n\n                    case client_messages_1.ChattyClientMessages.Message:\n                      if (_this._handlers[evt.data.data.eventName]) {\n                        _this._handlers[evt.data.data.eventName].forEach(function (fn) {\n                          return fn.apply(_this, evt.data.data.payload);\n                        });\n                      }\n\n                      break;\n\n                    case client_messages_1.ChattyClientMessages.MessageWithResponse:\n                      {\n                        var _a = evt.data.data,\n                            eventName_1 = _a.eventName,\n                            payload_1 = _a.payload,\n                            sequence_1 = _a.sequence;\n                        var results = [];\n\n                        if (_this._handlers[eventName_1]) {\n                          results = _this._handlers[eventName_1].map(function (fn) {\n                            return fn.apply(_this, payload_1);\n                          });\n                        }\n\n                        Promise.all(results).then(function (resolvedResults) {\n                          _this.sendMsg(host_messages_1.ChattyHostMessages.Response, {\n                            eventName: eventName_1,\n                            payload: resolvedResults\n                          }, sequence_1);\n                        }).catch(function (error) {\n                          _this.sendMsg(host_messages_1.ChattyHostMessages.ResponseError, {\n                            eventName: eventName_1,\n                            payload: error.toString()\n                          }, sequence_1);\n                        });\n                      }\n                      break;\n\n                    case client_messages_1.ChattyClientMessages.Response:\n                      {\n                        var receiver = _this._receivers[evt.data.data.sequence];\n\n                        if (receiver) {\n                          delete _this._receivers[evt.data.data.sequence];\n\n                          if (receiver.timeoutId) {\n                            clearTimeout(receiver.timeoutId);\n                          }\n\n                          receiver.resolve(evt.data.data.payload);\n                        }\n                      }\n                      break;\n\n                    case client_messages_1.ChattyClientMessages.ResponseError:\n                      {\n                        var receiver = _this._receivers[evt.data.data.sequence];\n\n                        if (receiver) {\n                          delete _this._receivers[evt.data.data.sequence];\n\n                          if (receiver.timeoutId) {\n                            clearTimeout(receiver.timeoutId);\n                          }\n\n                          receiver.reject(typeof evt.data.data.payload === 'string' ? new Error(evt.data.data.payload) : evt.data.data.payload);\n                        }\n                      }\n                      break;\n                  }\n                };\n\n                var windowListener = function (evt) {\n                  if (!_this.isValidMsg(evt)) {\n                    // don't reject here, since that breaks the promise resolution chain\n                    ChattyHost._debug('window received invalid', evt);\n\n                    return;\n                  }\n\n                  ChattyHost._debug('window received', evt.data.action, evt.data.data);\n\n                  switch (evt.data.action) {\n                    case client_messages_1.ChattyClientMessages.Syn:\n                      if (_this._port) {\n                        // If targetOrigin is set and we receive another Syn, the frame has potentially\n                        // navigated to another valid webpage and we should re-connect\n                        if (_this._targetOrigin && _this._targetOrigin === '*' || _this._targetOrigin === evt.origin) {\n                          ChattyHost._debug('reconnecting to', evt.origin);\n\n                          _this._port.close();\n                        } else {\n                          ChattyHost._debug('rejected new connection from', evt.origin);\n\n                          return;\n                        }\n                      }\n\n                      _this._port = evt.ports[0];\n                      _this._port.onmessage = eventListener;\n\n                      _this.sendMsg(host_messages_1.ChattyHostMessages.SynAck);\n\n                      _this._state = ChattyHostStates.SynAck;\n                      break;\n                  }\n                };\n\n                _this._hostWindow.addEventListener('message', windowListener);\n              })];\n            });\n          });\n        };\n\n        this._appendTo.appendChild(this.iframe);\n\n        return [2\n        /*return*/\n        , this._connection = createConnection()];\n      });\n    });\n  };\n\n  ChattyHost.prototype.sendMsg = function (action, data, sequence) {\n    if (data === void 0) {\n      data = {};\n    }\n\n    var sequenceData = sequence ? {\n      sequence: sequence\n    } : {};\n\n    var dataWithSequence = __assign(__assign({}, data), sequenceData);\n\n    ChattyHost._debug('sending', action, dataWithSequence);\n\n    this._port.postMessage({\n      action: action,\n      data: dataWithSequence\n    });\n  }; // TODO: natenate\n  // Frustratingly, enabling `allow-scripts` on a sandboxed iframe sets its origin to `'null'`\n  // (that is, a string literal with a value of null). This means that in order to `postMessage`\n  // to the client we must use `'*'` as the origin parameter.  To ensure messages received from\n  // the client are who they claim to be, we check the origin is `'null'` and the contentWindow\n  // is the one we have access to from the parent frame.  This method is described here:\n  // https://www.html5rocks.com/en/tutorials/security/sandboxed-iframes/#safely-sandboxing-eval\n  // If sandboxing is not enabled targetOrigin can be set and validated\n\n\n  ChattyHost.prototype.isValidMsg = function (evt) {\n    if (evt.source !== this.iframe.contentWindow) return false;\n    if (this._targetOrigin && !(this._targetOrigin === '*' || this._targetOrigin === evt.origin)) return false;\n    return true;\n  };\n\n  ChattyHost._debug = debugLib('looker:chatty:host');\n  return ChattyHost;\n}();\n\nexports.ChattyHost = ChattyHost;","map":{"version":3,"sources":["C:/Users/user/React/react-login/node_modules/@looker/chatty/lib/host.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","defineProperty","exports","client_messages_1","require","host_messages_1","debugLib","ChattyHostStates","ChattyHost","builder","_this","_hostWindow","window","_connection","_state","Connecting","_sequence","_receivers","iframe","document","createElement","sandboxAttrs","forEach","attr","sandbox","add","allow","allowAttrs","join","frameBorder","getFrameBorder","url","src","source","srcdoc","console","warn","_appendTo","el","_handlers","handlers","_port","_targetOrigin","targetOrigin","_defaultTimeout","defaultTimeout","get","enumerable","configurable","Connected","connect","createConnection","_a","eventListener","evt","_debug","data","action","ChattyClientMessages","Ack","send","eventName","payload","_i","sendMsg","ChattyHostMessages","Message","sendAndReceive","sequence","MessageWithResponse","timeoutId","setTimeout","Error","fn","eventName_1","payload_1","sequence_1","results","map","all","resolvedResults","Response","catch","error","ResponseError","toString","receiver","clearTimeout","windowListener","isValidMsg","Syn","origin","close","ports","onmessage","SynAck","addEventListener","appendChild","sequenceData","dataWithSequence","postMessage","contentWindow"],"mappings":"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","sourcesContent":["\"use strict\";\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_messages_1 = require(\"./client_messages\");\nvar host_messages_1 = require(\"./host_messages\");\nrequire(\"es6-promise/auto\"); // Polyfill only browsers without Promises\nvar debugLib = require(\"debug\");\n/**\n * @private\n * Host connection status\n */\nvar ChattyHostStates;\n(function (ChattyHostStates) {\n    ChattyHostStates[ChattyHostStates[\"Connecting\"] = 0] = \"Connecting\";\n    ChattyHostStates[ChattyHostStates[\"SynAck\"] = 1] = \"SynAck\";\n    ChattyHostStates[ChattyHostStates[\"Connected\"] = 2] = \"Connected\";\n})(ChattyHostStates = exports.ChattyHostStates || (exports.ChattyHostStates = {}));\n/**\n * The host object for an iframe. The user should not create this object directly, it\n * is returned by the [[ChattyHostBuilder.build]] method.\n */\nvar ChattyHost = /** @class */ (function () {\n    /**\n     * @param builder The client builder that is responsible for constructing this object.\n     * @hidden\n     */\n    function ChattyHost(builder) {\n        var _this = this;\n        this._hostWindow = window;\n        this._connection = null;\n        this._state = ChattyHostStates.Connecting;\n        this._sequence = 0;\n        this._receivers = {};\n        this.iframe = document.createElement('iframe');\n        builder.sandboxAttrs.forEach(function (attr) { return _this.iframe.sandbox.add(attr); });\n        if ('allow' in this.iframe) {\n            this.iframe.allow = builder.allowAttrs.join('; ');\n        }\n        // tslint:disable-next-line:deprecation\n        this.iframe.frameBorder = builder.getFrameBorder();\n        if (builder.url) {\n            this.iframe.src = builder.url;\n        }\n        else if (builder.source) {\n            this.iframe.srcdoc = builder.source;\n        }\n        else {\n            console.warn('url or source required to initialize Chatty host correctly');\n        }\n        this._appendTo = builder.el;\n        this._handlers = builder.handlers;\n        this._port = null;\n        this._targetOrigin = builder.targetOrigin;\n        this._defaultTimeout = builder.defaultTimeout;\n    }\n    Object.defineProperty(ChattyHost.prototype, \"connection\", {\n        /**\n         * @returns a Promise to an object that resolves when the client initiates the connection.\n         */\n        get: function () {\n            return this._connection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyHost.prototype, \"isConnected\", {\n        /**\n         * @returns a flag indicating whether the client successfully connected to the host.\n         */\n        get: function () {\n            return this._state === ChattyHostStates.Connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Connects to the client iframe. Waits for the client iframe to load and initiate a\n     * connection using the chatty client.\n     *\n     * @returns a Promise to an object that resolves when the client has initiated the connection. The\n     * object implements the [[ChattyHostConnection]] that can be used to talk to the host.\n     */\n    ChattyHost.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var createConnection;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this._connection)\n                    return [2 /*return*/, this._connection];\n                createConnection = function () { return __awaiter(_this, void 0, void 0, function () {\n                    var _this = this;\n                    return __generator(this, function (_a) {\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                var eventListener = function (evt) {\n                                    ChattyHost._debug('port received', evt.data.action, evt.data.data);\n                                    switch (evt.data.action) {\n                                        case client_messages_1.ChattyClientMessages.Ack:\n                                            _this._state = ChattyHostStates.Connected;\n                                            resolve({\n                                                send: function (eventName) {\n                                                    var payload = [];\n                                                    for (var _i = 1; _i < arguments.length; _i++) {\n                                                        payload[_i - 1] = arguments[_i];\n                                                    }\n                                                    _this.sendMsg(host_messages_1.ChattyHostMessages.Message, { eventName: eventName, payload: payload });\n                                                },\n                                                sendAndReceive: function (eventName) {\n                                                    var payload = [];\n                                                    for (var _i = 1; _i < arguments.length; _i++) {\n                                                        payload[_i - 1] = arguments[_i];\n                                                    }\n                                                    return __awaiter(_this, void 0, void 0, function () {\n                                                        var sequence;\n                                                        var _this = this;\n                                                        return __generator(this, function (_a) {\n                                                            sequence = ++this._sequence;\n                                                            this.sendMsg(host_messages_1.ChattyHostMessages.MessageWithResponse, { eventName: eventName, payload: payload }, sequence);\n                                                            return [2 /*return*/, new Promise(function (resolve, reject) {\n                                                                    var timeoutId;\n                                                                    if (_this._defaultTimeout > -1) {\n                                                                        timeoutId = setTimeout(function () {\n                                                                            delete _this._receivers[sequence];\n                                                                            reject(new Error('Timeout'));\n                                                                        }, _this._defaultTimeout);\n                                                                    }\n                                                                    _this._receivers[sequence] = { resolve: resolve, reject: reject, timeoutId: timeoutId };\n                                                                })];\n                                                        });\n                                                    });\n                                                }\n                                            });\n                                            break;\n                                        case client_messages_1.ChattyClientMessages.Message:\n                                            if (_this._handlers[evt.data.data.eventName]) {\n                                                _this._handlers[evt.data.data.eventName].forEach(function (fn) { return fn.apply(_this, evt.data.data.payload); });\n                                            }\n                                            break;\n                                        case client_messages_1.ChattyClientMessages.MessageWithResponse:\n                                            {\n                                                var _a = evt.data.data, eventName_1 = _a.eventName, payload_1 = _a.payload, sequence_1 = _a.sequence;\n                                                var results = [];\n                                                if (_this._handlers[eventName_1]) {\n                                                    results = _this._handlers[eventName_1].map(function (fn) { return fn.apply(_this, payload_1); });\n                                                }\n                                                Promise.all(results)\n                                                    .then(function (resolvedResults) {\n                                                    _this.sendMsg(host_messages_1.ChattyHostMessages.Response, { eventName: eventName_1, payload: resolvedResults }, sequence_1);\n                                                })\n                                                    .catch(function (error) {\n                                                    _this.sendMsg(host_messages_1.ChattyHostMessages.ResponseError, { eventName: eventName_1, payload: error.toString() }, sequence_1);\n                                                });\n                                            }\n                                            break;\n                                        case client_messages_1.ChattyClientMessages.Response:\n                                            {\n                                                var receiver = _this._receivers[evt.data.data.sequence];\n                                                if (receiver) {\n                                                    delete _this._receivers[evt.data.data.sequence];\n                                                    if (receiver.timeoutId) {\n                                                        clearTimeout(receiver.timeoutId);\n                                                    }\n                                                    receiver.resolve(evt.data.data.payload);\n                                                }\n                                            }\n                                            break;\n                                        case client_messages_1.ChattyClientMessages.ResponseError:\n                                            {\n                                                var receiver = _this._receivers[evt.data.data.sequence];\n                                                if (receiver) {\n                                                    delete _this._receivers[evt.data.data.sequence];\n                                                    if (receiver.timeoutId) {\n                                                        clearTimeout(receiver.timeoutId);\n                                                    }\n                                                    receiver.reject(typeof evt.data.data.payload === 'string' ?\n                                                        new Error(evt.data.data.payload) : evt.data.data.payload);\n                                                }\n                                            }\n                                            break;\n                                    }\n                                };\n                                var windowListener = function (evt) {\n                                    if (!_this.isValidMsg(evt)) {\n                                        // don't reject here, since that breaks the promise resolution chain\n                                        ChattyHost._debug('window received invalid', evt);\n                                        return;\n                                    }\n                                    ChattyHost._debug('window received', evt.data.action, evt.data.data);\n                                    switch (evt.data.action) {\n                                        case client_messages_1.ChattyClientMessages.Syn:\n                                            if (_this._port) {\n                                                // If targetOrigin is set and we receive another Syn, the frame has potentially\n                                                // navigated to another valid webpage and we should re-connect\n                                                if (_this._targetOrigin && _this._targetOrigin === '*' || _this._targetOrigin === evt.origin) {\n                                                    ChattyHost._debug('reconnecting to', evt.origin);\n                                                    _this._port.close();\n                                                }\n                                                else {\n                                                    ChattyHost._debug('rejected new connection from', evt.origin);\n                                                    return;\n                                                }\n                                            }\n                                            _this._port = evt.ports[0];\n                                            _this._port.onmessage = eventListener;\n                                            _this.sendMsg(host_messages_1.ChattyHostMessages.SynAck);\n                                            _this._state = ChattyHostStates.SynAck;\n                                            break;\n                                    }\n                                };\n                                _this._hostWindow.addEventListener('message', windowListener);\n                            })];\n                    });\n                }); };\n                this._appendTo.appendChild(this.iframe);\n                return [2 /*return*/, this._connection = createConnection()];\n            });\n        });\n    };\n    ChattyHost.prototype.sendMsg = function (action, data, sequence) {\n        if (data === void 0) { data = {}; }\n        var sequenceData = sequence ? { sequence: sequence } : {};\n        var dataWithSequence = __assign(__assign({}, data), sequenceData);\n        ChattyHost._debug('sending', action, dataWithSequence);\n        this._port.postMessage({ action: action, data: dataWithSequence });\n    };\n    // TODO: natenate\n    // Frustratingly, enabling `allow-scripts` on a sandboxed iframe sets its origin to `'null'`\n    // (that is, a string literal with a value of null). This means that in order to `postMessage`\n    // to the client we must use `'*'` as the origin parameter.  To ensure messages received from\n    // the client are who they claim to be, we check the origin is `'null'` and the contentWindow\n    // is the one we have access to from the parent frame.  This method is described here:\n    // https://www.html5rocks.com/en/tutorials/security/sandboxed-iframes/#safely-sandboxing-eval\n    // If sandboxing is not enabled targetOrigin can be set and validated\n    ChattyHost.prototype.isValidMsg = function (evt) {\n        if (evt.source !== this.iframe.contentWindow)\n            return false;\n        if (this._targetOrigin && !(this._targetOrigin === '*' || this._targetOrigin === evt.origin))\n            return false;\n        return true;\n    };\n    ChattyHost._debug = debugLib('looker:chatty:host');\n    return ChattyHost;\n}());\nexports.ChattyHost = ChattyHost;\n"]},"metadata":{},"sourceType":"script"}