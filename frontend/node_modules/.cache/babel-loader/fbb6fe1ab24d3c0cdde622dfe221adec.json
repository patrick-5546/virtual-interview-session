{"ast":null,"code":"\"use strict\";\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar client_messages_1 = require(\"./client_messages\");\n\nvar host_messages_1 = require(\"./host_messages\");\n\nrequire(\"es6-promise/auto\"); // Polyfill only browsers without Promises\n\n\nvar debugLib = require(\"debug\");\n/**\n * @private\n * Client connection status\n */\n\n\nvar ChattyClientStates;\n\n(function (ChattyClientStates) {\n  ChattyClientStates[ChattyClientStates[\"Connecting\"] = 0] = \"Connecting\";\n  ChattyClientStates[ChattyClientStates[\"Syn\"] = 1] = \"Syn\";\n  ChattyClientStates[ChattyClientStates[\"Connected\"] = 2] = \"Connected\";\n})(ChattyClientStates = exports.ChattyClientStates || (exports.ChattyClientStates = {}));\n/**\n * The client object for an iframe. The user should not create this object directly, it\n * is returned by the [[ChattyClientBuilder.build]] method.\n */\n\n\nvar ChattyClient =\n/** @class */\nfunction () {\n  /**\n   * @param builder The client builder that is responsible for constructing this object.\n   * @hidden\n   */\n  function ChattyClient(builder) {\n    this._clientWindow = window;\n    this._connection = null;\n    this._hostWindow = this._clientWindow.parent;\n    this._state = ChattyClientStates.Connecting;\n    this._sequence = 0;\n    this._receivers = {};\n    this._handlers = builder.handlers;\n    this._targetOrigin = builder.targetOrigin;\n    this._defaultTimeout = builder.defaultTimeout;\n    this._channel = new MessageChannel();\n  }\n\n  Object.defineProperty(ChattyClient.prototype, \"connection\", {\n    /**\n     * @returns a Promise to an object that resolves when the host has acknowledged the connection.\n     */\n    get: function () {\n      return this._connection;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChattyClient.prototype, \"isConnected\", {\n    /**\n     * @returns a flag indicating whether the client has successfully connected to the host.\n     */\n    get: function () {\n      return this._state === ChattyClientStates.Connected;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Connects to the host window.\n   * @returns a Promise to an object that resolves when the host has acknowledged the connection. The\n   * object implements the [[ChattyClientConnection]] interface that can be used to talk to the host.\n   */\n\n  ChattyClient.prototype.connect = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        if (this._connection) return [2\n        /*return*/\n        , this._connection];\n        this._connection = new Promise(function (resolve, reject) {\n          _this._channel.port1.onmessage = function (evt) {\n            ChattyClient._debug('received', evt.data.action, evt.data.data);\n\n            switch (evt.data.action) {\n              case host_messages_1.ChattyHostMessages.SynAck:\n                _this._state = ChattyClientStates.Connected;\n\n                _this.sendMsg(client_messages_1.ChattyClientMessages.Ack);\n\n                resolve({\n                  send: function (eventName) {\n                    var payload = [];\n\n                    for (var _i = 1; _i < arguments.length; _i++) {\n                      payload[_i - 1] = arguments[_i];\n                    }\n\n                    _this.sendMsg(client_messages_1.ChattyClientMessages.Message, {\n                      eventName: eventName,\n                      payload: payload\n                    });\n                  },\n                  sendAndReceive: function (eventName) {\n                    var payload = [];\n\n                    for (var _i = 1; _i < arguments.length; _i++) {\n                      payload[_i - 1] = arguments[_i];\n                    }\n\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var sequence;\n\n                      var _this = this;\n\n                      return __generator(this, function (_a) {\n                        sequence = ++this._sequence;\n                        this.sendMsg(client_messages_1.ChattyClientMessages.MessageWithResponse, {\n                          eventName: eventName,\n                          payload: payload\n                        }, sequence);\n                        return [2\n                        /*return*/\n                        , new Promise(function (resolve, reject) {\n                          var timeoutId;\n\n                          if (_this._defaultTimeout > -1) {\n                            timeoutId = setTimeout(function () {\n                              delete _this._receivers[sequence];\n                              reject(new Error('Timeout'));\n                            }, _this._defaultTimeout);\n                          }\n\n                          _this._receivers[sequence] = {\n                            resolve: resolve,\n                            reject: reject,\n                            timeoutId: timeoutId\n                          };\n                        })];\n                      });\n                    });\n                  }\n                });\n                break;\n\n              case host_messages_1.ChattyHostMessages.Message:\n                if (_this._handlers[evt.data.data.eventName]) {\n                  _this._handlers[evt.data.data.eventName].forEach(function (fn) {\n                    return fn.apply(_this, evt.data.data.payload);\n                  });\n                }\n\n                break;\n\n              case host_messages_1.ChattyHostMessages.MessageWithResponse:\n                {\n                  var _a = evt.data.data,\n                      eventName_1 = _a.eventName,\n                      payload_1 = _a.payload,\n                      sequence_1 = _a.sequence;\n                  var results = [];\n\n                  if (_this._handlers[eventName_1]) {\n                    results = _this._handlers[eventName_1].map(function (fn) {\n                      return fn.apply(_this, payload_1);\n                    });\n                  }\n\n                  Promise.all(results).then(function (resolvedResults) {\n                    _this.sendMsg(client_messages_1.ChattyClientMessages.Response, {\n                      eventName: eventName_1,\n                      payload: resolvedResults\n                    }, sequence_1);\n                  }).catch(function (error) {\n                    _this.sendMsg(client_messages_1.ChattyClientMessages.ResponseError, {\n                      eventName: eventName_1,\n                      payload: error.toString()\n                    }, sequence_1);\n                  });\n                }\n                break;\n\n              case host_messages_1.ChattyHostMessages.Response:\n                var receiver = _this._receivers[evt.data.data.sequence];\n\n                if (receiver) {\n                  delete _this._receivers[evt.data.data.sequence];\n\n                  if (receiver.timeoutId) {\n                    clearTimeout(receiver.timeoutId);\n                  }\n\n                  receiver.resolve(evt.data.data.payload);\n                }\n\n                break;\n\n              case host_messages_1.ChattyHostMessages.ResponseError:\n                {\n                  var receiver_1 = _this._receivers[evt.data.data.sequence];\n\n                  if (receiver_1) {\n                    delete _this._receivers[evt.data.data.sequence];\n\n                    if (receiver_1.timeoutId) {\n                      clearTimeout(receiver_1.timeoutId);\n                    }\n\n                    receiver_1.reject(typeof evt.data.data.payload === 'string' ? new Error(evt.data.data.payload) : evt.data.data.payload);\n                  }\n                }\n                break;\n            }\n          };\n\n          _this.initiateHandshake();\n        });\n        return [2\n        /*return*/\n        , this._connection];\n      });\n    });\n  };\n\n  ChattyClient.prototype.initiateHandshake = function () {\n    ChattyClient._debug('connecting to', this._targetOrigin);\n\n    this._hostWindow.postMessage({\n      action: client_messages_1.ChattyClientMessages.Syn\n    }, this._targetOrigin, [this._channel.port2]);\n\n    this._state = ChattyClientStates.Syn;\n  };\n\n  ChattyClient.prototype.sendMsg = function (action, data, sequence) {\n    if (data === void 0) {\n      data = {};\n    }\n\n    var sequenceData = sequence ? {\n      sequence: sequence\n    } : {};\n\n    var dataWithSequence = __assign(__assign({}, data), sequenceData);\n\n    ChattyClient._debug('sending', action, dataWithSequence);\n\n    this._channel.port1.postMessage({\n      action: action,\n      data: dataWithSequence\n    });\n  };\n\n  ChattyClient._debug = debugLib('looker:chatty:client');\n  return ChattyClient;\n}();\n\nexports.ChattyClient = ChattyClient;","map":{"version":3,"sources":["C:/Users/user/React/react-login/node_modules/@looker/chatty/lib/client.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","v","op","TypeError","pop","push","defineProperty","exports","client_messages_1","require","host_messages_1","debugLib","ChattyClientStates","ChattyClient","builder","_clientWindow","window","_connection","_hostWindow","parent","_state","Connecting","_sequence","_receivers","_handlers","handlers","_targetOrigin","targetOrigin","_defaultTimeout","defaultTimeout","_channel","MessageChannel","get","enumerable","configurable","Connected","connect","_this","_a","port1","onmessage","evt","_debug","data","action","ChattyHostMessages","SynAck","sendMsg","ChattyClientMessages","Ack","send","eventName","payload","_i","Message","sendAndReceive","sequence","MessageWithResponse","timeoutId","setTimeout","Error","forEach","fn","eventName_1","payload_1","sequence_1","results","map","all","resolvedResults","Response","catch","error","ResponseError","toString","receiver","clearTimeout","receiver_1","initiateHandshake","postMessage","Syn","port2","sequenceData","dataWithSequence"],"mappings":"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","sourcesContent":["\"use strict\";\n/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar client_messages_1 = require(\"./client_messages\");\nvar host_messages_1 = require(\"./host_messages\");\nrequire(\"es6-promise/auto\"); // Polyfill only browsers without Promises\nvar debugLib = require(\"debug\");\n/**\n * @private\n * Client connection status\n */\nvar ChattyClientStates;\n(function (ChattyClientStates) {\n    ChattyClientStates[ChattyClientStates[\"Connecting\"] = 0] = \"Connecting\";\n    ChattyClientStates[ChattyClientStates[\"Syn\"] = 1] = \"Syn\";\n    ChattyClientStates[ChattyClientStates[\"Connected\"] = 2] = \"Connected\";\n})(ChattyClientStates = exports.ChattyClientStates || (exports.ChattyClientStates = {}));\n/**\n * The client object for an iframe. The user should not create this object directly, it\n * is returned by the [[ChattyClientBuilder.build]] method.\n */\nvar ChattyClient = /** @class */ (function () {\n    /**\n     * @param builder The client builder that is responsible for constructing this object.\n     * @hidden\n     */\n    function ChattyClient(builder) {\n        this._clientWindow = window;\n        this._connection = null;\n        this._hostWindow = this._clientWindow.parent;\n        this._state = ChattyClientStates.Connecting;\n        this._sequence = 0;\n        this._receivers = {};\n        this._handlers = builder.handlers;\n        this._targetOrigin = builder.targetOrigin;\n        this._defaultTimeout = builder.defaultTimeout;\n        this._channel = new MessageChannel();\n    }\n    Object.defineProperty(ChattyClient.prototype, \"connection\", {\n        /**\n         * @returns a Promise to an object that resolves when the host has acknowledged the connection.\n         */\n        get: function () {\n            return this._connection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ChattyClient.prototype, \"isConnected\", {\n        /**\n         * @returns a flag indicating whether the client has successfully connected to the host.\n         */\n        get: function () {\n            return this._state === ChattyClientStates.Connected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Connects to the host window.\n     * @returns a Promise to an object that resolves when the host has acknowledged the connection. The\n     * object implements the [[ChattyClientConnection]] interface that can be used to talk to the host.\n     */\n    ChattyClient.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this._connection)\n                    return [2 /*return*/, this._connection];\n                this._connection = new Promise(function (resolve, reject) {\n                    _this._channel.port1.onmessage = function (evt) {\n                        ChattyClient._debug('received', evt.data.action, evt.data.data);\n                        switch (evt.data.action) {\n                            case host_messages_1.ChattyHostMessages.SynAck:\n                                _this._state = ChattyClientStates.Connected;\n                                _this.sendMsg(client_messages_1.ChattyClientMessages.Ack);\n                                resolve({\n                                    send: function (eventName) {\n                                        var payload = [];\n                                        for (var _i = 1; _i < arguments.length; _i++) {\n                                            payload[_i - 1] = arguments[_i];\n                                        }\n                                        _this.sendMsg(client_messages_1.ChattyClientMessages.Message, { eventName: eventName, payload: payload });\n                                    },\n                                    sendAndReceive: function (eventName) {\n                                        var payload = [];\n                                        for (var _i = 1; _i < arguments.length; _i++) {\n                                            payload[_i - 1] = arguments[_i];\n                                        }\n                                        return __awaiter(_this, void 0, void 0, function () {\n                                            var sequence;\n                                            var _this = this;\n                                            return __generator(this, function (_a) {\n                                                sequence = ++this._sequence;\n                                                this.sendMsg(client_messages_1.ChattyClientMessages.MessageWithResponse, { eventName: eventName, payload: payload }, sequence);\n                                                return [2 /*return*/, new Promise(function (resolve, reject) {\n                                                        var timeoutId;\n                                                        if (_this._defaultTimeout > -1) {\n                                                            timeoutId = setTimeout(function () {\n                                                                delete _this._receivers[sequence];\n                                                                reject(new Error('Timeout'));\n                                                            }, _this._defaultTimeout);\n                                                        }\n                                                        _this._receivers[sequence] = { resolve: resolve, reject: reject, timeoutId: timeoutId };\n                                                    })];\n                                            });\n                                        });\n                                    }\n                                });\n                                break;\n                            case host_messages_1.ChattyHostMessages.Message:\n                                if (_this._handlers[evt.data.data.eventName]) {\n                                    _this._handlers[evt.data.data.eventName].forEach(function (fn) { return fn.apply(_this, evt.data.data.payload); });\n                                }\n                                break;\n                            case host_messages_1.ChattyHostMessages.MessageWithResponse:\n                                {\n                                    var _a = evt.data.data, eventName_1 = _a.eventName, payload_1 = _a.payload, sequence_1 = _a.sequence;\n                                    var results = [];\n                                    if (_this._handlers[eventName_1]) {\n                                        results = _this._handlers[eventName_1].map(function (fn) { return fn.apply(_this, payload_1); });\n                                    }\n                                    Promise.all(results)\n                                        .then(function (resolvedResults) {\n                                        _this.sendMsg(client_messages_1.ChattyClientMessages.Response, { eventName: eventName_1, payload: resolvedResults }, sequence_1);\n                                    })\n                                        .catch(function (error) {\n                                        _this.sendMsg(client_messages_1.ChattyClientMessages.ResponseError, { eventName: eventName_1, payload: error.toString() }, sequence_1);\n                                    });\n                                }\n                                break;\n                            case host_messages_1.ChattyHostMessages.Response:\n                                var receiver = _this._receivers[evt.data.data.sequence];\n                                if (receiver) {\n                                    delete _this._receivers[evt.data.data.sequence];\n                                    if (receiver.timeoutId) {\n                                        clearTimeout(receiver.timeoutId);\n                                    }\n                                    receiver.resolve(evt.data.data.payload);\n                                }\n                                break;\n                            case host_messages_1.ChattyHostMessages.ResponseError:\n                                {\n                                    var receiver_1 = _this._receivers[evt.data.data.sequence];\n                                    if (receiver_1) {\n                                        delete _this._receivers[evt.data.data.sequence];\n                                        if (receiver_1.timeoutId) {\n                                            clearTimeout(receiver_1.timeoutId);\n                                        }\n                                        receiver_1.reject(typeof evt.data.data.payload === 'string' ?\n                                            new Error(evt.data.data.payload) : evt.data.data.payload);\n                                    }\n                                }\n                                break;\n                        }\n                    };\n                    _this.initiateHandshake();\n                });\n                return [2 /*return*/, this._connection];\n            });\n        });\n    };\n    ChattyClient.prototype.initiateHandshake = function () {\n        ChattyClient._debug('connecting to', this._targetOrigin);\n        this._hostWindow.postMessage({\n            action: client_messages_1.ChattyClientMessages.Syn\n        }, this._targetOrigin, [this._channel.port2]);\n        this._state = ChattyClientStates.Syn;\n    };\n    ChattyClient.prototype.sendMsg = function (action, data, sequence) {\n        if (data === void 0) { data = {}; }\n        var sequenceData = sequence ? { sequence: sequence } : {};\n        var dataWithSequence = __assign(__assign({}, data), sequenceData);\n        ChattyClient._debug('sending', action, dataWithSequence);\n        this._channel.port1.postMessage({ action: action, data: dataWithSequence });\n    };\n    ChattyClient._debug = debugLib('looker:chatty:client');\n    return ChattyClient;\n}());\nexports.ChattyClient = ChattyClient;\n"]},"metadata":{},"sourceType":"script"}